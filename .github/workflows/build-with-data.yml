name: Build Docker Image with Data

on:
  push:
    branches: [main, typescript]
  pull_request:
    branches: [main]
  schedule:
    # Run weekly on Sundays at 2 AM UTC to get fresh data
    - cron: '0 2 * * 0'
  workflow_dispatch:
    # Allow manual triggering

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build TypeScript
      run: npm run build

    - name: Create data directory
      run: mkdir -p data

    - name: Download cycling nodes data
      run: |
        echo "üö¥‚Äç‚ôÄÔ∏è Starting download of Dutch cycling nodes from OpenStreetMap..."
        echo "Current directory: $(pwd)"
        echo "Node version: $(node --version)"
        echo "NPM version: $(npm --version)"
        
        echo "Starting nodes download (this will rebuild TypeScript first)..."
        timeout 1800 npm run download
        
        echo "Download completed, checking results..."
        if [ -d "data/chunks" ]; then
          echo "‚úÖ Chunks directory exists"
          echo "Number of chunk files: $(ls data/chunks/ | wc -l)"
          ls -la data/chunks/ | head -10
        else
          echo "‚ùå No chunks directory found - download failed"
          exit 1
        fi
      env:
        NODE_ENV: production

    - name: Download cycling routes data
      run: |
        echo "üõ£Ô∏è Starting download of Dutch cycling routes from OpenStreetMap..."
        timeout 1800 npm run download:routes || {
          echo "‚ö†Ô∏è Routes download failed or timed out, continuing without routes"
          echo "This is non-critical, app will work without routes"
        }
      env:
        NODE_ENV: production

    - name: Verify data files
      run: |
        echo "üìä Data download summary:"
        if [ -d "data" ]; then
          echo "Data directory size: $(du -sh data/ | cut -f1)"
          echo "Files in data directory:"
          ls -la data/
          
          if [ -f "data/nodes-chunk-index.json" ]; then
            echo "‚úÖ Chunk index found"
            echo "Chunk index content:"
            head -20 data/nodes-chunk-index.json
          else
            echo "‚ùå No chunk index found"
          fi
          
          if [ -d "data/chunks" ]; then
            echo "‚úÖ Chunks directory found"
            echo "Number of chunk files: $(ls data/chunks/ | wc -l)"
            echo "Sample chunk files:"
            ls data/chunks/ | head -5
          else
            echo "‚ùå No chunks directory found"
          fi
        else
          echo "‚ö†Ô∏è No data directory found"
        fi

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=schedule,pattern={{date 'YYYYMMDD'}}
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Prepare Docker build context
      run: |
        # Use specific dockerignore for data-included build
        cp .dockerignore.with-data .dockerignore
        
        # Ensure data directory exists with correct structure for Docker build
        mkdir -p data/chunks
        
        # Verify data structure before Docker build
        echo "üìÇ Verifying data structure for Docker build:"
        echo "Current working directory: $(pwd)"
        echo "Contents of data directory:"
        if [ -d "data" ]; then
          ls -la data/
          echo "Contents of data/chunks directory:"
          if [ -d "data/chunks" ]; then
            echo "Chunk files count: $(ls data/chunks/ | wc -l)"
            ls data/chunks/ | head -5
          else
            echo "‚ùå No chunks directory found"
          fi
        else
          echo "‚ùå No data directory found - creating empty structure"
          mkdir -p data/chunks
          echo "Created empty data structure for Docker build"
        fi

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile.with-data
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Image summary
      run: |
        echo "üê≥ Docker image built and pushed successfully!"
        echo "üì¶ Image tags:"
        echo "${{ steps.meta.outputs.tags }}"
        echo ""
        echo "üöÄ To run the image:"
        echo "docker run -p 3000:3000 ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest"
